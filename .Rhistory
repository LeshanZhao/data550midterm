here::i_am("report.Rmd")
proj_data <- readRDS(
file = here::here("output/data_clean.rds")
)
getwd()
ls
make report.html
# Here Command
here::i_am("code/00_clean_data.R")
# Reads in Data
covid_sub_location <- here::here("data/covid_sub.csv")
covid <- read.csv(covid_sub_location, header = TRUE)
# Create new variable to indicate if person has COVID-19
covid <- covid %>%
mutate(CASE_STATUS = ifelse(CLASIFFICATION_FINAL < 4, 1, 0),
DIED = ifelse(!is.na(DATE_DIED), 1, 0)
)
library(dplyr)
# Create new variable to indicate if person has COVID-19
covid <- covid %>%
mutate(CASE_STATUS = ifelse(CLASIFFICATION_FINAL < 4, 1, 0),
DIED = ifelse(!is.na(DATE_DIED), 1, 0)
)
# Save onto the output folder
saveRDS(covid, file = here::here("output/data_clean.rds"))
# Save onto the output folder
saveRDS(covid, file = here::here("output/data_clean.rds"))
View(covid)
library(here)
library(dplyr)
here::i_am("code/01_make_tables.R")
## Create table_nonresp
## Load the cleaned data
covid <- readRDS(here::here("output/data_clean.rds"))
View(covid)
# Here Command
here::i_am("code/00_clean_data.R")
# Reads in Data
covid_sub_location <- here::here("data/covid_sub.csv")
covid <- read.csv(covid_sub_location, header = TRUE)
# Create new variable to indicate if person has COVID-19
covid <- covid %>%
mutate(CASE_STATUS = ifelse(CLASIFFICATION_FINAL < 4, 1, 0),
DIED = ifelse(!is.na(DATE_DIED), 1, 0)
)
# Save onto the output folder
saveRDS(covid, file = here::here("output/data_clean.rds"))
View(covid)
table_resp <- covid %>%
select(CASE_STATUS, PNEUMONIA, COPD, ASTHMA) %>%
group_by(CASE_STATUS) %>%
summarise(
PNEUMONIA = sum(PNEUMONIA == "Yes"),
COPD = sum(COPD == "Yes"),
ASTHMA = sum(ASTHMA == "Yes", na.rm = TRUE),
) %>%
as.data.frame()
## Save the table as an .rds file in the output folder
saveRDS(table_resp, file = here::here("output/table_resp.rds"))
View(table_resp)
table_resp <- covid %>%
select(CASE_STATUS, PNEUMONIA, COPD, ASTHMA) %>%
group_by(CASE_STATUS) %>%
summarise(
PNEUMONIA = sum(PNEUMONIA == "Yes", na.rm = TRUE),
COPD = sum(COPD == "Yes", na.rm = TRUE),
ASTHMA = sum(ASTHMA == "Yes", na.rm = TRUE),
)
View(table_resp)
class(table_resp)
## Create the frequency table table_resp by counting "Yes" responses for each disease of "PNEUMONIA", "COPD", and "ASTHMA"
table_resp <- covid %>%
select(CASE_STATUS, PNEUMONIA, COPD, ASTHMA) %>%
group_by(CASE_STATUS) %>%
summarise(
PNEUMONIA = sum(PNEUMONIA == "Yes", na.rm = TRUE),
COPD = sum(COPD == "Yes", na.rm = TRUE),
ASTHMA = sum(ASTHMA == "Yes", na.rm = TRUE),
) %>%
as.data.frame()
class(table_resp)
''' 1. Leshan: Frequency of respiratory diseases (PNEUMONIA, COPD, and ASTHMA)'''
'''1. Leshan: Frequency of respiratory diseases (PNEUMONIA, COPD, and ASTHMA)'''
'1. Leshan: Frequency of respiratory diseases (PNEUMONIA, COPD, and ASTHMA)'
# Create resp_fig
## Load the frequency table data
table_resp = readRDS(here::here("output/table_resp.rds"))
## Convert CASE_STATUS to a factor for better labeling in the plot
table_resp$CASE_STATUS = factor(table_resp$CASE_STATUS, labels = c("No COVID-19", "COVID-19"))
## Reshape data for plotting
table_resp_long = table_resp %>%
pivot_longer(cols = -CASE_STATUS, names_to = "Disease", values_to = "Count")
library(tidyr)
# Create resp_fig
## Load the frequency table data
table_resp = readRDS(here::here("output/table_resp.rds"))
## Convert CASE_STATUS to a factor for better labeling in the plot
table_resp$CASE_STATUS = factor(table_resp$CASE_STATUS, labels = c("No COVID-19", "COVID-19"))
## Reshape data for plotting
table_resp_long = table_resp %>%
pivot_longer(cols = -CASE_STATUS, names_to = "Disease", values_to = "Count")
## Create the grouped bar chart
resp_fig = ggplot(table_resp_long, aes(x = Disease, y = Count, fill = CASE_STATUS)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Non-Respiratory Chronic Diseases by COVID-19 Status",
x = "Non-Respiratory Chronic Disease",
y = "Count",
fill = "COVID-19 Status") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
library(ggplot2)
# Create resp_fig
## Load the frequency table data
table_resp = readRDS(here::here("output/table_resp.rds"))
## Convert CASE_STATUS to a factor for better labeling in the plot
table_resp$CASE_STATUS = factor(table_resp$CASE_STATUS, labels = c("No COVID-19", "COVID-19"))
## Reshape data for plotting
table_resp_long = table_resp %>%
pivot_longer(cols = -CASE_STATUS, names_to = "Disease", values_to = "Count")
## Create the grouped bar chart
resp_fig = ggplot(table_resp_long, aes(x = Disease, y = Count, fill = CASE_STATUS)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Non-Respiratory Chronic Diseases by COVID-19 Status",
x = "Non-Respiratory Chronic Disease",
y = "Count",
fill = "COVID-19 Status") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
## Save the plot as a .png file in the output folder
ggsave(filename = here::here("output/resp_fig.png"), plot = resp_fig, width = 8, height = 6)
table_nonresp <- readRDS(here::here("output/table_nonresp.rds"))
## Convert CASE_STATUS to a factor for better labeling in the plot
table_nonresp$CASE_STATUS <- factor(table_nonresp$CASE_STATUS, labels = c("No COVID-19", "COVID-19"))
## Reshape data for plotting
table_nonresp_long <- table_nonresp %>%
pivot_longer(cols = -CASE_STATUS, names_to = "Disease", values_to = "Count")
## Create the grouped bar chart
nonresp_fig <- ggplot(table_nonresp_long, aes(x = Disease, y = Count, fill = CASE_STATUS)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Non-Respiratory Chronic Diseases by COVID-19 Status",
x = "Non-Respiratory Chronic Disease",
y = "Count",
fill = "COVID-19 Status") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
## Save the plot as a .png file in the output folder
ggsave(filename = here::here("output/nonresp_fig.png"), plot = nonresp_fig, width = 8, height = 6)
View(table_nonresp)
View(table_resp)
## Load the cleaned data
covid <- readRDS(here::here("output/data_clean.rds"))
## 1. Frequency of respiratory diseases (PNEUMONIA, COPD, and ASTHMA)
table_resp <- covid %>%
select(CASE_STATUS, PNEUMONIA, COPD, ASTHMA) %>%
group_by(CASE_STATUS) %>%
summarise(
PNEUMONIA = sum(PNEUMONIA == "Yes", na.rm = TRUE),
COPD = sum(COPD == "Yes", na.rm = TRUE),
ASTHMA = sum(ASTHMA == "Yes", na.rm = TRUE),
)
## Save the table to output/table_resp.rds
saveRDS(table_resp, file = here::here("output/table_resp.rds"))
View(table_resp)
# Create resp_fig
## Load the frequency table data
table_resp = readRDS(here::here("output/table_resp.rds"))
## Convert CASE_STATUS to a factor for better labeling in the plot
table_resp$CASE_STATUS = factor(table_resp$CASE_STATUS, labels = c("No COVID-19", "COVID-19"))
## Reshape data for plotting
table_resp_long = table_resp %>%
pivot_longer(cols = -CASE_STATUS, names_to = "Disease", values_to = "Count")
## Create the grouped bar chart
resp_fig = ggplot(table_resp_long, aes(x = Disease, y = Count, fill = CASE_STATUS)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Non-Respiratory Chronic Diseases by COVID-19 Status",
x = "Non-Respiratory Chronic Disease",
y = "Count",
fill = "COVID-19 Status") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
## Save the plot as a .png file in the output folder
ggsave(filename = here::here("output/resp_fig.png"), plot = resp_fig, width = 8, height = 6)
resp_fig
knitr::table_nonresp
knitr::kable(table_nonresp)
knitr::kable(table_nonresp, title="hi")
knitr::kable(table_nonresp, main="hi")
knitr::kable(table_nonresp, caption="Frequencies of Respiratory Diseases Cases by Covid-19 Status")
saveRDS(resp_fig, file = here::here("output/resp_fig.rds"))
rm(resp_fig)
resp_fig = readRDS(file = here::here("output/resp_fig.rds"))
resp_fig
## Create the grouped bar chart
resp_fig = ggplot(table_resp_long, aes(x = Disease, y = Count, fill = CASE_STATUS)) +
geom_bar(stat = "identity", position = position_dodge()) +
labs(title = "Number of Respiratory Disease Cases by COVID-19 Status",
x = "Respiratory Disease",
y = "Count",
fill = "COVID-19 Status") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
saveRDS(resp_fig, file = here::here("output/resp_fig.rds"))
resp_fig = readRDS(file = here::here("output/resp_fig.rds"))
resp_fig
## Save the plot as a .png file in the output folder
ggsave(filename = here::here("output/resp_fig.png"), plot = resp_fig, width = 8, height = 6)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/nonresp_fig.png")
)
knitr::include_graphics(
here::here("output/resp_fig.rds")
)
knitr::include_graphics(
here::here("output/resp_fig.rds")
)
knitr::include_graphics(
resp_fig)
resp_fig = readRDS(file = here::here("output/resp_fig.rds"))
resp_fig
knitr::include_graphics(
resp_fig)
knitr::kable(
resp_fig)
knitr::table(
resp_fig)
knitr::kable(
resp_fig)
pic
knitr::include_graphics(
here::here("output/nonresp_fig.png")
)
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/resp_fig.png")
)
table_resp <- readRDS(
file = here::here("output/table_resp.rds")
)
table_resp <- readRDS(
file = here::here("output/table_resp.rds")
)
knitr::kable(table_resp, caption="Frequencies of Respiratory Diseases Cases by Covid-19 Status")
# Show Figure
#| fig.align = "center",
#| out.width = "600px"
knitr::include_graphics(
here::here("output/resp_fig.png")
)
here::i_am("report.Rmd")
proj_data <- readRDS(
file = here::here("output/data_clean.rds")
)
rm(list=ls())
# Here Command
here::i_am("code/00_clean_data.R")
# Reads in Data
covid_sub_location <- here::here("data/covid_sub.csv")
covid <- read.csv(covid_sub_location, header = TRUE)
# Create new variable to indicate if person has COVID-19
covid <- covid %>%
mutate(CASE_STATUS = ifelse(CLASIFFICATION_FINAL < 4, 1, 0),
DIED = ifelse(!is.na(DATE_DIED), 1, 0)
)
# Here Command
here::i_am("code/00_clean_data.R")
library(dplyr)
# Create new variable to indicate if person has COVID-19
covid <- covid %>%
mutate(CASE_STATUS = ifelse(CLASIFFICATION_FINAL < 4, 1, 0),
DIED = ifelse(!is.na(DATE_DIED), 1, 0)
)
# Save onto the output folder
saveRDS(covid, file = here::here("output/data_clean.rds"))
source("D:/zls/Emory/Courses/2024 Fall/DATA 550/Assignments/FinalProject/data550midterm/code/00_clean_data.R", echo=TRUE)
detach("packages:here")
library(here)
detach("packages:here")
detach("package:here")
detach("dplyr")
